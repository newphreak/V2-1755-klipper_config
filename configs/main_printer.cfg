# This file contains common pin mappings for the Fysetc Spider board.
# To use this config, the firmware should be compiled for the STM32F446.
# When calling "menuconfig", enable "extra low-level configuration setup"
# and select the "12MHz crystal" as clock reference
# For flashing, write the compiled klipper.bin to memory location 0x08000000

## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Fine tune E steps					[extruder] section

[mcu]
##  You need to select 'Communication interface' to USB in 'make menuconfig'
##  when you compile Klipper for Spider
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_350030000750305538333620-if00
##	If you want to use the Raspberry uart0 to communicate with Spider, 
##  you need to select 'Communication interface' to 'Serial (on USART1 PA10/PA9)' 
##  in 'make menuconfig' when you compile klipper and set the serial as below
##--------------------------------------------------------------------
serial: /dev/ttyAMA0
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 4000
max_accel_to_decel: 2000
max_z_velocity: 20
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#	Macros
#####################################################################
[gcode_shell_command backup_cfg]
command: sh /home/pi/klipper_config/autocommit.sh
timeout: 30.0
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
  RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro G32]
gcode:
    M117 E.T. Phone Home
    G28
    M117 QGL Squeek Crack
    QUAD_GANTRY_LEVEL
    M117 Homing.....
    G28

#########NEEDED IN SLICER FOR TEMPERATURES TO WORK###########################################################################################################################
## START_PRINT BED_TEMPERATURE=[first_layer_bed_temperature] EXTRUDER_TEMPERATURE=[first_layer_temperature] CHAMBER=[chamber_temperature] FILAMENT_TYPE={filament_type[0]} ##
#############################################################################################################################################################################
[gcode_macro START_PRINT]
default_parameter_BED_TEMPERATURE: 60
default_parameter_EXTRUDER_TEMPERATURE: 200
default_parameter_CHAMBER: 42
gcode:
    G28
    G90                                                                         ;Absolute positioning
    G1 X150 Y150 Z20 F12000
    {% if FILAMENT_TYPE == "ABS" or FILAMENT_TYPE == "ASA" %}
      SET_FAN_SPEED FAN=exhaust_fan SPEED=0.10
      SET_FAN_SPEED FAN=nevermore SPEED=0.60
    {% endif %}
    M106 S255
      M117 Heating shit
  M190 S{params.BED_TEMPERATURE}                                                            ; Set bed to final temp and wait
  {% set chamber = printer['temperature_sensor chamber'] %}
  {% if params.BED_TEMPERATURE|int > 70 and chamber.temperature < params.CHAMBER|int %}     ; Heat soak if needed
    M117 Soaking: {CHAMBER}~degrees~
    M109 S150                                                                   ; Set hotend to 150 and wait for temp
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER}      ; Wait for chamber temp
    M106 S0                                                                     ; Turn on Part Cooling Fan off
  {% endif %}
    SONG_SIMPLE_DONE
    G32
    M117 Calibrating Mesh
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default
    G1 X50 Y5 Z10 F15000                                                        ;Move to front left corner and wait for nozzle temperature
    M117 Heating ~extruder~
    M109 S{EXTRUDER_TEMPERATURE}                                                ;Set real nozzle temperature1
    G1 E7 F900
    G92 E0.0
    M117 Printer goes Brr

[gcode_macro END_PRINT]
gcode:
    M117 WOHO, FINITO
    G91                                                                         ;Relative positioning
    G1 E-8 Z0.2 F1500                                                           ;Retract and raise Z
    G1 X5 Y5 F15000                                                             ;Wipe out
    G1 Z10                                                                      ;Raise Z more
    G90                                                                         ;Absolute positioning
    G92 E0                                                                      ;Reset extruder
    M106 S0                                                                     ;Turn-off fan
    M104 S0                                                                     ;Turn-off hotend
    M140 S0                                                                     ;Turn-off bed
    SONG_STARWARS_IMP
    G28 X0 Y0                                                                   ;Home X and Y
    BED_MESH_CLEAR
    {% if FILAMENT_TYPE == "ABS" or FILAMENT_TYPE == "ASA" %}
    FILTER_CHAMBER TIME=10
    {% endif %}
    UPDATE_DELAYED_GCODE ID=shutoff_timer DURATION=60

[delayed_gcode shutoff_timer]
gcode:
  M84 X Y Z E
  M117

[gcode_macro FILTER_CHAMBER]
default_parameter_BED_TEMPERATURE: 48
gcode:
    M117 Cooling down ~fan~
    SET_FAN_SPEED FAN=nevermore SPEED=0.65
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.25
    TEMPERATURE_WAIT SENSOR="heater_bed" MAXIMUM={BED_TEMPERATURE}      ; Wait for chamber temp
    SONG_SIMPLE_DONE
    SET_FAN_SPEED FAN=nevermore SPEED=0
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    M117

[gcode_macro M600]
default_parameter_X: 20
default_parameter_Y: 20
default_parameter_Z: 40
gcode:
    SAVE_GCODE_STATE NAME=M600                                                  ;Save state
    PAUSE                                                                       ;Pause print
        G91                                                                     ;Relative positioning
    G1 Z20 F900                                                                 ;Raise Z away from print
    G90                                                                         ;Absolute positioning
    G1 X{X} Y{Y} F5000                                                          ;Move to purge bucket
    G1 Z{Z} F5000                                                               ;Move to purge bucket
    UNLOAD_FILAMENT                                                             ;Unload the spool so you can change color
    SONG_SIMPLE_DONE
        RESTORE_GCODE_STATE NAME=M600                                           ;Restore state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    G91                                                                         ;Relative positioning
    G1 E5 F300                                                                 ;Extrude a little
    G1 E10 F150                                                                 ;extrude some more
    G1 E-20 F2400                                                               ;Yank it out as fast as it'll go
    G1 E-100 F1600                                                              ;Throw it out the length of the bowden tube
    G90                                                                         ;Absolute positioning

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOAD                                                  ;Save state
    G91                                                                         ;Relative positioning
        G1 E150 F300                                                            ;Printer go OMNOMNOMNOM
    G90                                                                         ;Absolute positioning
    RESTORE_GCODE_STATE NAME=LOAD                               ;Restore state
    SET_IDLE_TIMEOUT TIMEOUT=7200                               ;Timeout

[gcode_macro PURGE_NOZZLE]
gcode:
    G91                                                                         ;Relative positioning
    G1 E45.0 F250                                                               ;Extrude 45mm of filament
    G90                                                                         ;Absolute positionin
    
[gcode_macro _USER_VARIABLE]
description: Helper: Contains User defined printer variables
variable_debug: 1   ; enable debug information to the console
gcode:

[delayed_gcode _CHECK_CONFIG]
initial_duration: 0.1
gcode:
  ## exexcute _USER_VARIABLE once at startup to do the needed calcs
  {% if printer['gcode_macro _USER_VARIABLE'] is not defined %}
    { action_respond_info(
        "CONFIG: ERROR\n"
        "_USER_VARIABLE macro missing\n"
        "This holds common variables for your printer and must be defined") }
  {% else %}
    _USER_VARIABLE
    ##### consistent check #####
    {% if printer['gcode_macro _USER_VARIABLE'].auto_z_offset|lower == 'z_calib' and 
      printer['gcode_macro _USER_VARIABLE'].probe_type|lower == 'unknown' %}
      {action_respond_info(
      "CONFIG: ERROR\n"
      "[z_calibration] defined but no probe found\n")}
    {% endif %}    
  {% endif %}
  ## check if save_variables are defined
  {% if 'save_variables' not in printer %}
    {action_respond_info(
      "CONFIG: ERROR\n"
      "[save_variables] missing\n"
      "This is needed to store variables to a file")}
  {% endif %}
  
[gcode_macro DUMP_PARAMETERS]
description: Dump all Klipper parameters to terminal
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['bed_mesh','configfile'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
      {% else %}
        {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}

# For example SPEEDTEST I=10
# Compare the GET_POSITION output before and after, see if you skipped steps. IIRC you want the "mcu" line to show within 16 before and after (a full step)
[gcode_macro SPEEDTEST]
gcode:
  #Parameters
  {% set i = params.I|default(1)|int %}
  
  SAVE_GCODE_STATE NAME=SPEEDTEST
  G28 X Y
  GET_POSITION
  G90                              ; absolute positioning
  {% for iteration in range(i|int) %}
    G1 X0 Y0     F27000
    G1 X290 Y290 F27000
    G1 X0 Y0     F27000
    G1 X290 Y290 F27000

    G1 X0 Y290 F36000

    G1 X290 Y0 F27000
    G1 X0 Y290 F27000
    G1 X290 Y0 F27000
    G1 X0 Y290 F27000

    G1 X0 Y0 F36000
    G1 X290 Y0 F36000
    G1 X290 Y290 F36000
    G1 X0 Y290 F36000
    G1 X0 Y0 F36000
  {% endfor %}
  G28 X Y
  GET_POSITION
  RESTORE_GCODE_STATE NAME=SPEEDTEST

[gcode_arcs]
resolution: 0.05

[save_variables]
filename: ~/klipper_config/saved_variables.cfg

[respond]
default_type: echo
